/*
Wisp API

Wisp API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wisp

import (
	"encoding/json"
	"fmt"
)

// LatestClusterLogStatusEnum * `UPDATING` - UPDATING * `DONE` - DONE * `CLUSTER_ERROR` - CLUSTER_ERROR
type LatestClusterLogStatusEnum string

// List of LatestClusterLogStatusEnum
const (
	UPDATING LatestClusterLogStatusEnum = "UPDATING"
	DONE LatestClusterLogStatusEnum = "DONE"
	CLUSTER_ERROR LatestClusterLogStatusEnum = "CLUSTER_ERROR"
)

// All allowed values of LatestClusterLogStatusEnum enum
var AllowedLatestClusterLogStatusEnumEnumValues = []LatestClusterLogStatusEnum{
	"UPDATING",
	"DONE",
	"CLUSTER_ERROR",
}

func (v *LatestClusterLogStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LatestClusterLogStatusEnum(value)
	for _, existing := range AllowedLatestClusterLogStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LatestClusterLogStatusEnum", value)
}

// NewLatestClusterLogStatusEnumFromValue returns a pointer to a valid LatestClusterLogStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLatestClusterLogStatusEnumFromValue(v string) (*LatestClusterLogStatusEnum, error) {
	ev := LatestClusterLogStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LatestClusterLogStatusEnum: valid values are %v", v, AllowedLatestClusterLogStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LatestClusterLogStatusEnum) IsValid() bool {
	for _, existing := range AllowedLatestClusterLogStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LatestClusterLogStatusEnum value
func (v LatestClusterLogStatusEnum) Ptr() *LatestClusterLogStatusEnum {
	return &v
}

type NullableLatestClusterLogStatusEnum struct {
	value *LatestClusterLogStatusEnum
	isSet bool
}

func (v NullableLatestClusterLogStatusEnum) Get() *LatestClusterLogStatusEnum {
	return v.value
}

func (v *NullableLatestClusterLogStatusEnum) Set(val *LatestClusterLogStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestClusterLogStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestClusterLogStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestClusterLogStatusEnum(val *LatestClusterLogStatusEnum) *NullableLatestClusterLogStatusEnum {
	return &NullableLatestClusterLogStatusEnum{value: val, isSet: true}
}

func (v NullableLatestClusterLogStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestClusterLogStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

