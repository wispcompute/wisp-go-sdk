/*
Wisp API

Wisp API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wisp

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the LatestClusterLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LatestClusterLog{}

// LatestClusterLog Latest cluster log serializer.
type LatestClusterLog struct {
	Timestamp time.Time `json:"timestamp"`
	Status LatestClusterLogStatusEnum `json:"status"`
	Message string `json:"message"`
}

type _LatestClusterLog LatestClusterLog

// NewLatestClusterLog instantiates a new LatestClusterLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestClusterLog(timestamp time.Time, status LatestClusterLogStatusEnum, message string) *LatestClusterLog {
	this := LatestClusterLog{}
	this.Timestamp = timestamp
	this.Status = status
	this.Message = message
	return &this
}

// NewLatestClusterLogWithDefaults instantiates a new LatestClusterLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestClusterLogWithDefaults() *LatestClusterLog {
	this := LatestClusterLog{}
	return &this
}

// GetTimestamp returns the Timestamp field value
func (o *LatestClusterLog) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *LatestClusterLog) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *LatestClusterLog) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetStatus returns the Status field value
func (o *LatestClusterLog) GetStatus() LatestClusterLogStatusEnum {
	if o == nil {
		var ret LatestClusterLogStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *LatestClusterLog) GetStatusOk() (*LatestClusterLogStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *LatestClusterLog) SetStatus(v LatestClusterLogStatusEnum) {
	o.Status = v
}

// GetMessage returns the Message field value
func (o *LatestClusterLog) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *LatestClusterLog) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *LatestClusterLog) SetMessage(v string) {
	o.Message = v
}

func (o LatestClusterLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LatestClusterLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["status"] = o.Status
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *LatestClusterLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timestamp",
		"status",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLatestClusterLog := _LatestClusterLog{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLatestClusterLog)

	if err != nil {
		return err
	}

	*o = LatestClusterLog(varLatestClusterLog)

	return err
}

type NullableLatestClusterLog struct {
	value *LatestClusterLog
	isSet bool
}

func (v NullableLatestClusterLog) Get() *LatestClusterLog {
	return v.value
}

func (v *NullableLatestClusterLog) Set(val *LatestClusterLog) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestClusterLog) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestClusterLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestClusterLog(val *LatestClusterLog) *NullableLatestClusterLog {
	return &NullableLatestClusterLog{value: val, isSet: true}
}

func (v NullableLatestClusterLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestClusterLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


