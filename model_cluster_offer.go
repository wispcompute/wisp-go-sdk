/*
Wisp API

Wisp API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterOffer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterOffer{}

// ClusterOffer Serializer for cluster offers.  Fields:     cloud (str): Cloud provider name     instance_type (str): Instance type identifier     cpus (int): Number of CPUs     memory (float): Memory size in GB     accelerators (AcceleratorSpec): Accelerator specifications     accelerator_args (dict): Additional accelerator arguments     use_spot (bool): Whether to use spot instances     job_recovery (dict): Job recovery configuration     region (str): Region identifier     zone (str): Zone identifier     image_id (str): VM image identifier     disk_size (int): Disk size in GB     disk_tier (str): Disk performance tier     ports (list): Port configurations     labels (dict): Instance labels     price (float): Hourly price     storage (int): Storage size in GB     accelerator_count (int): Number of accelerators     regions (list): Available regions
type ClusterOffer struct {
	Cloud string `json:"cloud"`
	InstanceType string `json:"instance_type"`
	Cpus int32 `json:"cpus"`
	Memory float64 `json:"memory"`
	Accelerators interface{} `json:"accelerators"`
	AcceleratorArgs interface{} `json:"accelerator_args"`
	UseSpot NullableBool `json:"use_spot"`
	JobRecovery interface{} `json:"job_recovery"`
	Region NullableString `json:"region"`
	Zone NullableString `json:"zone"`
	ImageId NullableString `json:"image_id"`
	DiskSize NullableInt32 `json:"disk_size"`
	DiskTier NullableString `json:"disk_tier"`
	Ports []interface{} `json:"ports"`
	Labels map[string]interface{} `json:"labels"`
	Price float64 `json:"price"`
	Storage NullableInt32 `json:"storage"`
	AcceleratorCount NullableInt32 `json:"accelerator_count"`
	Regions []string `json:"regions"`
}

type _ClusterOffer ClusterOffer

// NewClusterOffer instantiates a new ClusterOffer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterOffer(cloud string, instanceType string, cpus int32, memory float64, accelerators interface{}, acceleratorArgs interface{}, useSpot NullableBool, jobRecovery interface{}, region NullableString, zone NullableString, imageId NullableString, diskSize NullableInt32, diskTier NullableString, ports []interface{}, labels map[string]interface{}, price float64, storage NullableInt32, acceleratorCount NullableInt32, regions []string) *ClusterOffer {
	this := ClusterOffer{}
	this.Cloud = cloud
	this.InstanceType = instanceType
	this.Cpus = cpus
	this.Memory = memory
	this.Accelerators = accelerators
	this.AcceleratorArgs = acceleratorArgs
	this.UseSpot = useSpot
	this.JobRecovery = jobRecovery
	this.Region = region
	this.Zone = zone
	this.ImageId = imageId
	this.DiskSize = diskSize
	this.DiskTier = diskTier
	this.Ports = ports
	this.Labels = labels
	this.Price = price
	this.Storage = storage
	this.AcceleratorCount = acceleratorCount
	this.Regions = regions
	return &this
}

// NewClusterOfferWithDefaults instantiates a new ClusterOffer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterOfferWithDefaults() *ClusterOffer {
	this := ClusterOffer{}
	return &this
}

// GetCloud returns the Cloud field value
func (o *ClusterOffer) GetCloud() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *ClusterOffer) GetCloudOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *ClusterOffer) SetCloud(v string) {
	o.Cloud = v
}

// GetInstanceType returns the InstanceType field value
func (o *ClusterOffer) GetInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *ClusterOffer) GetInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *ClusterOffer) SetInstanceType(v string) {
	o.InstanceType = v
}

// GetCpus returns the Cpus field value
func (o *ClusterOffer) GetCpus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value
// and a boolean to check if the value has been set.
func (o *ClusterOffer) GetCpusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpus, true
}

// SetCpus sets field value
func (o *ClusterOffer) SetCpus(v int32) {
	o.Cpus = v
}

// GetMemory returns the Memory field value
func (o *ClusterOffer) GetMemory() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *ClusterOffer) GetMemoryOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *ClusterOffer) SetMemory(v float64) {
	o.Memory = v
}

// GetAccelerators returns the Accelerators field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ClusterOffer) GetAccelerators() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Accelerators
}

// GetAcceleratorsOk returns a tuple with the Accelerators field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetAcceleratorsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Accelerators) {
		return nil, false
	}
	return &o.Accelerators, true
}

// SetAccelerators sets field value
func (o *ClusterOffer) SetAccelerators(v interface{}) {
	o.Accelerators = v
}

// GetAcceleratorArgs returns the AcceleratorArgs field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ClusterOffer) GetAcceleratorArgs() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.AcceleratorArgs
}

// GetAcceleratorArgsOk returns a tuple with the AcceleratorArgs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetAcceleratorArgsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AcceleratorArgs) {
		return nil, false
	}
	return &o.AcceleratorArgs, true
}

// SetAcceleratorArgs sets field value
func (o *ClusterOffer) SetAcceleratorArgs(v interface{}) {
	o.AcceleratorArgs = v
}

// GetUseSpot returns the UseSpot field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *ClusterOffer) GetUseSpot() bool {
	if o == nil || o.UseSpot.Get() == nil {
		var ret bool
		return ret
	}

	return *o.UseSpot.Get()
}

// GetUseSpotOk returns a tuple with the UseSpot field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetUseSpotOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseSpot.Get(), o.UseSpot.IsSet()
}

// SetUseSpot sets field value
func (o *ClusterOffer) SetUseSpot(v bool) {
	o.UseSpot.Set(&v)
}

// GetJobRecovery returns the JobRecovery field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ClusterOffer) GetJobRecovery() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.JobRecovery
}

// GetJobRecoveryOk returns a tuple with the JobRecovery field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetJobRecoveryOk() (*interface{}, bool) {
	if o == nil || IsNil(o.JobRecovery) {
		return nil, false
	}
	return &o.JobRecovery, true
}

// SetJobRecovery sets field value
func (o *ClusterOffer) SetJobRecovery(v interface{}) {
	o.JobRecovery = v
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ClusterOffer) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *ClusterOffer) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetZone returns the Zone field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ClusterOffer) GetZone() string {
	if o == nil || o.Zone.Get() == nil {
		var ret string
		return ret
	}

	return *o.Zone.Get()
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zone.Get(), o.Zone.IsSet()
}

// SetZone sets field value
func (o *ClusterOffer) SetZone(v string) {
	o.Zone.Set(&v)
}

// GetImageId returns the ImageId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ClusterOffer) GetImageId() string {
	if o == nil || o.ImageId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// SetImageId sets field value
func (o *ClusterOffer) SetImageId(v string) {
	o.ImageId.Set(&v)
}

// GetDiskSize returns the DiskSize field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ClusterOffer) GetDiskSize() int32 {
	if o == nil || o.DiskSize.Get() == nil {
		var ret int32
		return ret
	}

	return *o.DiskSize.Get()
}

// GetDiskSizeOk returns a tuple with the DiskSize field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetDiskSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskSize.Get(), o.DiskSize.IsSet()
}

// SetDiskSize sets field value
func (o *ClusterOffer) SetDiskSize(v int32) {
	o.DiskSize.Set(&v)
}

// GetDiskTier returns the DiskTier field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ClusterOffer) GetDiskTier() string {
	if o == nil || o.DiskTier.Get() == nil {
		var ret string
		return ret
	}

	return *o.DiskTier.Get()
}

// GetDiskTierOk returns a tuple with the DiskTier field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetDiskTierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskTier.Get(), o.DiskTier.IsSet()
}

// SetDiskTier sets field value
func (o *ClusterOffer) SetDiskTier(v string) {
	o.DiskTier.Set(&v)
}

// GetPorts returns the Ports field value
// If the value is explicit nil, the zero value for []interface{} will be returned
func (o *ClusterOffer) GetPorts() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetPortsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// SetPorts sets field value
func (o *ClusterOffer) SetPorts(v []interface{}) {
	o.Ports = v
}

// GetLabels returns the Labels field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ClusterOffer) GetLabels() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]interface{}{}, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *ClusterOffer) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

// GetPrice returns the Price field value
func (o *ClusterOffer) GetPrice() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *ClusterOffer) GetPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *ClusterOffer) SetPrice(v float64) {
	o.Price = v
}

// GetStorage returns the Storage field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ClusterOffer) GetStorage() int32 {
	if o == nil || o.Storage.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Storage.Get()
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetStorageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage.Get(), o.Storage.IsSet()
}

// SetStorage sets field value
func (o *ClusterOffer) SetStorage(v int32) {
	o.Storage.Set(&v)
}

// GetAcceleratorCount returns the AcceleratorCount field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ClusterOffer) GetAcceleratorCount() int32 {
	if o == nil || o.AcceleratorCount.Get() == nil {
		var ret int32
		return ret
	}

	return *o.AcceleratorCount.Get()
}

// GetAcceleratorCountOk returns a tuple with the AcceleratorCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetAcceleratorCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcceleratorCount.Get(), o.AcceleratorCount.IsSet()
}

// SetAcceleratorCount sets field value
func (o *ClusterOffer) SetAcceleratorCount(v int32) {
	o.AcceleratorCount.Set(&v)
}

// GetRegions returns the Regions field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ClusterOffer) GetRegions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetRegionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// SetRegions sets field value
func (o *ClusterOffer) SetRegions(v []string) {
	o.Regions = v
}

func (o ClusterOffer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterOffer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud"] = o.Cloud
	toSerialize["instance_type"] = o.InstanceType
	toSerialize["cpus"] = o.Cpus
	toSerialize["memory"] = o.Memory
	if o.Accelerators != nil {
		toSerialize["accelerators"] = o.Accelerators
	}
	if o.AcceleratorArgs != nil {
		toSerialize["accelerator_args"] = o.AcceleratorArgs
	}
	toSerialize["use_spot"] = o.UseSpot.Get()
	if o.JobRecovery != nil {
		toSerialize["job_recovery"] = o.JobRecovery
	}
	toSerialize["region"] = o.Region.Get()
	toSerialize["zone"] = o.Zone.Get()
	toSerialize["image_id"] = o.ImageId.Get()
	toSerialize["disk_size"] = o.DiskSize.Get()
	toSerialize["disk_tier"] = o.DiskTier.Get()
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["price"] = o.Price
	toSerialize["storage"] = o.Storage.Get()
	toSerialize["accelerator_count"] = o.AcceleratorCount.Get()
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	return toSerialize, nil
}

func (o *ClusterOffer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloud",
		"instance_type",
		"cpus",
		"memory",
		"accelerators",
		"accelerator_args",
		"use_spot",
		"job_recovery",
		"region",
		"zone",
		"image_id",
		"disk_size",
		"disk_tier",
		"ports",
		"labels",
		"price",
		"storage",
		"accelerator_count",
		"regions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterOffer := _ClusterOffer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterOffer)

	if err != nil {
		return err
	}

	*o = ClusterOffer(varClusterOffer)

	return err
}

type NullableClusterOffer struct {
	value *ClusterOffer
	isSet bool
}

func (v NullableClusterOffer) Get() *ClusterOffer {
	return v.value
}

func (v *NullableClusterOffer) Set(val *ClusterOffer) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterOffer) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterOffer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterOffer(val *ClusterOffer) *NullableClusterOffer {
	return &NullableClusterOffer{value: val, isSet: true}
}

func (v NullableClusterOffer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterOffer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


