/*
Wisp API

Wisp API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wisp

import (
	"encoding/json"
)

// checks if the ClusterOffer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterOffer{}

// ClusterOffer struct for ClusterOffer
type ClusterOffer struct {
	DiskSize NullableInt64 `json:"disk_size,omitempty"`
	Cloud NullableString `json:"cloud,omitempty"`
	JobRecovery NullableString `json:"job_recovery,omitempty"`
	DiskTier NullableString `json:"disk_tier,omitempty"`
	Memory NullableInt64 `json:"memory,omitempty"`
	AcceleratorArgs interface{} `json:"accelerator_args,omitempty"`
	Region NullableString `json:"region,omitempty"`
	Price NullableFloat64 `json:"price,omitempty"`
	Storage NullableString `json:"storage,omitempty"`
	InstanceType NullableString `json:"instance_type,omitempty"`
	Cpus NullableInt64 `json:"cpus,omitempty"`
	Accelerators interface{} `json:"accelerators,omitempty"`
	UseSpot NullableBool `json:"use_spot,omitempty"`
	Zone NullableString `json:"zone,omitempty"`
	ImageId interface{} `json:"image_id,omitempty"`
	Ports interface{} `json:"ports,omitempty"`
	Labels interface{} `json:"labels,omitempty"`
	AcceleratorCount interface{} `json:"accelerator_count,omitempty"`
	Regions interface{} `json:"regions,omitempty"`
}

// NewClusterOffer instantiates a new ClusterOffer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterOffer() *ClusterOffer {
	this := ClusterOffer{}
	return &this
}

// NewClusterOfferWithDefaults instantiates a new ClusterOffer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterOfferWithDefaults() *ClusterOffer {
	this := ClusterOffer{}
	return &this
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetDiskSize() int64 {
	if o == nil || IsNil(o.DiskSize.Get()) {
		var ret int64
		return ret
	}
	return *o.DiskSize.Get()
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetDiskSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskSize.Get(), o.DiskSize.IsSet()
}

// HasDiskSize returns a boolean if a field has been set.
func (o *ClusterOffer) HasDiskSize() bool {
	if o != nil && o.DiskSize.IsSet() {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given NullableInt64 and assigns it to the DiskSize field.
func (o *ClusterOffer) SetDiskSize(v int64) {
	o.DiskSize.Set(&v)
}
// SetDiskSizeNil sets the value for DiskSize to be an explicit nil
func (o *ClusterOffer) SetDiskSizeNil() {
	o.DiskSize.Set(nil)
}

// UnsetDiskSize ensures that no value is present for DiskSize, not even an explicit nil
func (o *ClusterOffer) UnsetDiskSize() {
	o.DiskSize.Unset()
}

// GetCloud returns the Cloud field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetCloud() string {
	if o == nil || IsNil(o.Cloud.Get()) {
		var ret string
		return ret
	}
	return *o.Cloud.Get()
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetCloudOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cloud.Get(), o.Cloud.IsSet()
}

// HasCloud returns a boolean if a field has been set.
func (o *ClusterOffer) HasCloud() bool {
	if o != nil && o.Cloud.IsSet() {
		return true
	}

	return false
}

// SetCloud gets a reference to the given NullableString and assigns it to the Cloud field.
func (o *ClusterOffer) SetCloud(v string) {
	o.Cloud.Set(&v)
}
// SetCloudNil sets the value for Cloud to be an explicit nil
func (o *ClusterOffer) SetCloudNil() {
	o.Cloud.Set(nil)
}

// UnsetCloud ensures that no value is present for Cloud, not even an explicit nil
func (o *ClusterOffer) UnsetCloud() {
	o.Cloud.Unset()
}

// GetJobRecovery returns the JobRecovery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetJobRecovery() string {
	if o == nil || IsNil(o.JobRecovery.Get()) {
		var ret string
		return ret
	}
	return *o.JobRecovery.Get()
}

// GetJobRecoveryOk returns a tuple with the JobRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetJobRecoveryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobRecovery.Get(), o.JobRecovery.IsSet()
}

// HasJobRecovery returns a boolean if a field has been set.
func (o *ClusterOffer) HasJobRecovery() bool {
	if o != nil && o.JobRecovery.IsSet() {
		return true
	}

	return false
}

// SetJobRecovery gets a reference to the given NullableString and assigns it to the JobRecovery field.
func (o *ClusterOffer) SetJobRecovery(v string) {
	o.JobRecovery.Set(&v)
}
// SetJobRecoveryNil sets the value for JobRecovery to be an explicit nil
func (o *ClusterOffer) SetJobRecoveryNil() {
	o.JobRecovery.Set(nil)
}

// UnsetJobRecovery ensures that no value is present for JobRecovery, not even an explicit nil
func (o *ClusterOffer) UnsetJobRecovery() {
	o.JobRecovery.Unset()
}

// GetDiskTier returns the DiskTier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetDiskTier() string {
	if o == nil || IsNil(o.DiskTier.Get()) {
		var ret string
		return ret
	}
	return *o.DiskTier.Get()
}

// GetDiskTierOk returns a tuple with the DiskTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetDiskTierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskTier.Get(), o.DiskTier.IsSet()
}

// HasDiskTier returns a boolean if a field has been set.
func (o *ClusterOffer) HasDiskTier() bool {
	if o != nil && o.DiskTier.IsSet() {
		return true
	}

	return false
}

// SetDiskTier gets a reference to the given NullableString and assigns it to the DiskTier field.
func (o *ClusterOffer) SetDiskTier(v string) {
	o.DiskTier.Set(&v)
}
// SetDiskTierNil sets the value for DiskTier to be an explicit nil
func (o *ClusterOffer) SetDiskTierNil() {
	o.DiskTier.Set(nil)
}

// UnsetDiskTier ensures that no value is present for DiskTier, not even an explicit nil
func (o *ClusterOffer) UnsetDiskTier() {
	o.DiskTier.Unset()
}

// GetMemory returns the Memory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetMemory() int64 {
	if o == nil || IsNil(o.Memory.Get()) {
		var ret int64
		return ret
	}
	return *o.Memory.Get()
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetMemoryOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memory.Get(), o.Memory.IsSet()
}

// HasMemory returns a boolean if a field has been set.
func (o *ClusterOffer) HasMemory() bool {
	if o != nil && o.Memory.IsSet() {
		return true
	}

	return false
}

// SetMemory gets a reference to the given NullableInt64 and assigns it to the Memory field.
func (o *ClusterOffer) SetMemory(v int64) {
	o.Memory.Set(&v)
}
// SetMemoryNil sets the value for Memory to be an explicit nil
func (o *ClusterOffer) SetMemoryNil() {
	o.Memory.Set(nil)
}

// UnsetMemory ensures that no value is present for Memory, not even an explicit nil
func (o *ClusterOffer) UnsetMemory() {
	o.Memory.Unset()
}

// GetAcceleratorArgs returns the AcceleratorArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetAcceleratorArgs() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AcceleratorArgs
}

// GetAcceleratorArgsOk returns a tuple with the AcceleratorArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetAcceleratorArgsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AcceleratorArgs) {
		return nil, false
	}
	return &o.AcceleratorArgs, true
}

// HasAcceleratorArgs returns a boolean if a field has been set.
func (o *ClusterOffer) HasAcceleratorArgs() bool {
	if o != nil && !IsNil(o.AcceleratorArgs) {
		return true
	}

	return false
}

// SetAcceleratorArgs gets a reference to the given interface{} and assigns it to the AcceleratorArgs field.
func (o *ClusterOffer) SetAcceleratorArgs(v interface{}) {
	o.AcceleratorArgs = v
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *ClusterOffer) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *ClusterOffer) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *ClusterOffer) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *ClusterOffer) UnsetRegion() {
	o.Region.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetPrice() float64 {
	if o == nil || IsNil(o.Price.Get()) {
		var ret float64
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *ClusterOffer) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat64 and assigns it to the Price field.
func (o *ClusterOffer) SetPrice(v float64) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *ClusterOffer) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *ClusterOffer) UnsetPrice() {
	o.Price.Unset()
}

// GetStorage returns the Storage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetStorage() string {
	if o == nil || IsNil(o.Storage.Get()) {
		var ret string
		return ret
	}
	return *o.Storage.Get()
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetStorageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage.Get(), o.Storage.IsSet()
}

// HasStorage returns a boolean if a field has been set.
func (o *ClusterOffer) HasStorage() bool {
	if o != nil && o.Storage.IsSet() {
		return true
	}

	return false
}

// SetStorage gets a reference to the given NullableString and assigns it to the Storage field.
func (o *ClusterOffer) SetStorage(v string) {
	o.Storage.Set(&v)
}
// SetStorageNil sets the value for Storage to be an explicit nil
func (o *ClusterOffer) SetStorageNil() {
	o.Storage.Set(nil)
}

// UnsetStorage ensures that no value is present for Storage, not even an explicit nil
func (o *ClusterOffer) UnsetStorage() {
	o.Storage.Unset()
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceType.Get()
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceType.Get(), o.InstanceType.IsSet()
}

// HasInstanceType returns a boolean if a field has been set.
func (o *ClusterOffer) HasInstanceType() bool {
	if o != nil && o.InstanceType.IsSet() {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given NullableString and assigns it to the InstanceType field.
func (o *ClusterOffer) SetInstanceType(v string) {
	o.InstanceType.Set(&v)
}
// SetInstanceTypeNil sets the value for InstanceType to be an explicit nil
func (o *ClusterOffer) SetInstanceTypeNil() {
	o.InstanceType.Set(nil)
}

// UnsetInstanceType ensures that no value is present for InstanceType, not even an explicit nil
func (o *ClusterOffer) UnsetInstanceType() {
	o.InstanceType.Unset()
}

// GetCpus returns the Cpus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetCpus() int64 {
	if o == nil || IsNil(o.Cpus.Get()) {
		var ret int64
		return ret
	}
	return *o.Cpus.Get()
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetCpusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cpus.Get(), o.Cpus.IsSet()
}

// HasCpus returns a boolean if a field has been set.
func (o *ClusterOffer) HasCpus() bool {
	if o != nil && o.Cpus.IsSet() {
		return true
	}

	return false
}

// SetCpus gets a reference to the given NullableInt64 and assigns it to the Cpus field.
func (o *ClusterOffer) SetCpus(v int64) {
	o.Cpus.Set(&v)
}
// SetCpusNil sets the value for Cpus to be an explicit nil
func (o *ClusterOffer) SetCpusNil() {
	o.Cpus.Set(nil)
}

// UnsetCpus ensures that no value is present for Cpus, not even an explicit nil
func (o *ClusterOffer) UnsetCpus() {
	o.Cpus.Unset()
}

// GetAccelerators returns the Accelerators field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetAccelerators() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Accelerators
}

// GetAcceleratorsOk returns a tuple with the Accelerators field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetAcceleratorsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Accelerators) {
		return nil, false
	}
	return &o.Accelerators, true
}

// HasAccelerators returns a boolean if a field has been set.
func (o *ClusterOffer) HasAccelerators() bool {
	if o != nil && !IsNil(o.Accelerators) {
		return true
	}

	return false
}

// SetAccelerators gets a reference to the given interface{} and assigns it to the Accelerators field.
func (o *ClusterOffer) SetAccelerators(v interface{}) {
	o.Accelerators = v
}

// GetUseSpot returns the UseSpot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetUseSpot() bool {
	if o == nil || IsNil(o.UseSpot.Get()) {
		var ret bool
		return ret
	}
	return *o.UseSpot.Get()
}

// GetUseSpotOk returns a tuple with the UseSpot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetUseSpotOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseSpot.Get(), o.UseSpot.IsSet()
}

// HasUseSpot returns a boolean if a field has been set.
func (o *ClusterOffer) HasUseSpot() bool {
	if o != nil && o.UseSpot.IsSet() {
		return true
	}

	return false
}

// SetUseSpot gets a reference to the given NullableBool and assigns it to the UseSpot field.
func (o *ClusterOffer) SetUseSpot(v bool) {
	o.UseSpot.Set(&v)
}
// SetUseSpotNil sets the value for UseSpot to be an explicit nil
func (o *ClusterOffer) SetUseSpotNil() {
	o.UseSpot.Set(nil)
}

// UnsetUseSpot ensures that no value is present for UseSpot, not even an explicit nil
func (o *ClusterOffer) UnsetUseSpot() {
	o.UseSpot.Unset()
}

// GetZone returns the Zone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetZone() string {
	if o == nil || IsNil(o.Zone.Get()) {
		var ret string
		return ret
	}
	return *o.Zone.Get()
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zone.Get(), o.Zone.IsSet()
}

// HasZone returns a boolean if a field has been set.
func (o *ClusterOffer) HasZone() bool {
	if o != nil && o.Zone.IsSet() {
		return true
	}

	return false
}

// SetZone gets a reference to the given NullableString and assigns it to the Zone field.
func (o *ClusterOffer) SetZone(v string) {
	o.Zone.Set(&v)
}
// SetZoneNil sets the value for Zone to be an explicit nil
func (o *ClusterOffer) SetZoneNil() {
	o.Zone.Set(nil)
}

// UnsetZone ensures that no value is present for Zone, not even an explicit nil
func (o *ClusterOffer) UnsetZone() {
	o.Zone.Unset()
}

// GetImageId returns the ImageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetImageId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetImageIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return &o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *ClusterOffer) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given interface{} and assigns it to the ImageId field.
func (o *ClusterOffer) SetImageId(v interface{}) {
	o.ImageId = v
}

// GetPorts returns the Ports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetPorts() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetPortsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return &o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *ClusterOffer) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given interface{} and assigns it to the Ports field.
func (o *ClusterOffer) SetPorts(v interface{}) {
	o.Ports = v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetLabels() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetLabelsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ClusterOffer) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given interface{} and assigns it to the Labels field.
func (o *ClusterOffer) SetLabels(v interface{}) {
	o.Labels = v
}

// GetAcceleratorCount returns the AcceleratorCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetAcceleratorCount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AcceleratorCount
}

// GetAcceleratorCountOk returns a tuple with the AcceleratorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetAcceleratorCountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AcceleratorCount) {
		return nil, false
	}
	return &o.AcceleratorCount, true
}

// HasAcceleratorCount returns a boolean if a field has been set.
func (o *ClusterOffer) HasAcceleratorCount() bool {
	if o != nil && !IsNil(o.AcceleratorCount) {
		return true
	}

	return false
}

// SetAcceleratorCount gets a reference to the given interface{} and assigns it to the AcceleratorCount field.
func (o *ClusterOffer) SetAcceleratorCount(v interface{}) {
	o.AcceleratorCount = v
}

// GetRegions returns the Regions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterOffer) GetRegions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterOffer) GetRegionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return &o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *ClusterOffer) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given interface{} and assigns it to the Regions field.
func (o *ClusterOffer) SetRegions(v interface{}) {
	o.Regions = v
}

func (o ClusterOffer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterOffer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DiskSize.IsSet() {
		toSerialize["disk_size"] = o.DiskSize.Get()
	}
	if o.Cloud.IsSet() {
		toSerialize["cloud"] = o.Cloud.Get()
	}
	if o.JobRecovery.IsSet() {
		toSerialize["job_recovery"] = o.JobRecovery.Get()
	}
	if o.DiskTier.IsSet() {
		toSerialize["disk_tier"] = o.DiskTier.Get()
	}
	if o.Memory.IsSet() {
		toSerialize["memory"] = o.Memory.Get()
	}
	if o.AcceleratorArgs != nil {
		toSerialize["accelerator_args"] = o.AcceleratorArgs
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.Storage.IsSet() {
		toSerialize["storage"] = o.Storage.Get()
	}
	if o.InstanceType.IsSet() {
		toSerialize["instance_type"] = o.InstanceType.Get()
	}
	if o.Cpus.IsSet() {
		toSerialize["cpus"] = o.Cpus.Get()
	}
	if o.Accelerators != nil {
		toSerialize["accelerators"] = o.Accelerators
	}
	if o.UseSpot.IsSet() {
		toSerialize["use_spot"] = o.UseSpot.Get()
	}
	if o.Zone.IsSet() {
		toSerialize["zone"] = o.Zone.Get()
	}
	if o.ImageId != nil {
		toSerialize["image_id"] = o.ImageId
	}
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.AcceleratorCount != nil {
		toSerialize["accelerator_count"] = o.AcceleratorCount
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	return toSerialize, nil
}

type NullableClusterOffer struct {
	value *ClusterOffer
	isSet bool
}

func (v NullableClusterOffer) Get() *ClusterOffer {
	return v.value
}

func (v *NullableClusterOffer) Set(val *ClusterOffer) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterOffer) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterOffer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterOffer(val *ClusterOffer) *NullableClusterOffer {
	return &NullableClusterOffer{value: val, isSet: true}
}

func (v NullableClusterOffer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterOffer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


