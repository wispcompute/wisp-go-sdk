openapi: 3.0.3
info:
  description: Wisp API
  title: Wisp API
  version: 1.0.0
servers:
- url: /
paths:
  /api/analyze:
    post:
      description: Estimate optimal cloud resources based on workload metadata
      operationId: analyze_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeGetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnalyzeGetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnalyzeGetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeGetResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - analyze
  /api/clusters/:
    get:
      description: Retrieve a list of all Clusters for the whole organization.
      operationId: clusters_retrieve
      parameters:
      - explode: true
        in: query
        name: constraints
        required: false
        schema:
          $ref: '#/components/schemas/ConstrainRequest'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - clusters
    post:
      description: Launch a cluster configuration.
      operationId: clusters_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClusterPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClusterPostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterPostResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - clusters
  /api/clusters/{cluster_name}/{action}/:
    post:
      description: "Perform an action (start, stop, pause, resume) on a Cluster."
      operationId: cluster_action_create
      parameters:
      - explode: false
        in: path
        name: action
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: wait
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterActionResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                additionalProperties: {}
                description: Unspecified response body
                type: object
          description: ""
        "401":
          content:
            application/json:
              schema:
                additionalProperties: {}
                description: Unspecified response body
                type: object
          description: ""
        "404":
          content:
            application/json:
              schema:
                additionalProperties: {}
                description: Unspecified response body
                type: object
          description: ""
        "409":
          content:
            application/json:
              schema:
                additionalProperties: {}
                description: Unspecified response body
                type: object
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - clusters
  /api/clusters/{cluster_name}/status/:
    get:
      description: Retrieve the current status of a Cluster.
      operationId: clusters_status_retrieve
      parameters:
      - explode: false
        in: path
        name: cluster_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatusResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                additionalProperties: {}
                description: Unspecified response body
                type: object
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - clusters
  /api/constraints/:
    patch:
      description: Validate the configuration if the cluster is already running.
      operationId: constraints_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConstrainPatchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConstrainPatchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConstrainPatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstrainRequest'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - constraints
    post:
      description: Constrain clusters based on resource specification.
      operationId: constraints_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstrainRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConstrainRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConstrainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstrainResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - constraints
  /api/download/:
    get:
      description: |-
        Generate a signed download URL for the requested Wisp CLI binary.

        Args:
            request: The HTTP request object containing the binary name in query params.

        Returns:
            Response: Contains either the signed URL or an error message.
      operationId: download_retrieve
      parameters:
      - description: The name of the binary to download
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - download
  /api/jobs/:
    post:
      description: Create a new job on the specified cluster.
      operationId: jobs_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TempJobPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TempJobPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TempJobPostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - jobs
  /api/jobs/{job_id}/:
    delete:
      description: Delete a job
      operationId: jobs_destroy
      parameters:
      - explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - jobs
    get:
      description: Get the job for the user.
      operationId: jobs_retrieve
      parameters:
      - explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGetResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - jobs
    patch:
      description: "Update job status with logs, exit code and finished time"
      operationId: jobs_partial_update
      parameters:
      - explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobUpdateResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - jobs
  /api/projects/:
    get:
      description: List all projects for the authenticated user.
      operationId: list_projects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGetResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - projects
    post:
      description: Create a new project.
      operationId: create_project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - projects
  /api/projects/{project_id}/:
    delete:
      description: Delete a specific project.
      operationId: delete_project
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - projects
    get:
      description: Retrieve a specific project.
      operationId: retrieve_project
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - projects
  /api/projects/{project_id}/jobs/:
    get:
      description: Get the jobs for the user.
      operationId: projects_jobs_retrieve
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - projects
  /api/provision/{provision_id}:
    get:
      description: Retrieve the current status of a Cluster.
      operationId: provision_retrieve
      parameters:
      - explode: false
        in: path
        name: provision_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionLog'
          description: ""
        "404":
          content:
            application/json:
              schema:
                additionalProperties: {}
                description: Unspecified response body
                type: object
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - provision
  /api/users/me/:
    get:
      description: Get the user information
      operationId: users_me_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - users
  /api/users/me/public-key/:
    get:
      description: Get the user's public key.
      operationId: users_me_public_key_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicKeyResponse'
          description: ""
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - users
    post:
      description: Set the user's public key.
      operationId: users_me_public_key_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPublicKeyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPublicKeyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPublicKeyRequest'
        required: true
      responses:
        "200":
          description: No response body
      security:
      - tokenAuth: []
      - oauth2: []
      tags:
      - users
components:
  schemas:
    AnalyzeGetRequest:
      example:
        current_resources:
          accelerator_args: ""
          memory: 441289069
          regions: ""
          cpus: 413233370
          disk_size: -1803530559
          storage: storage
          ports: ""
          accelerator_count: ""
          disk_tier: disk_tier
          job_recovery: job_recovery
          labels: ""
          cloud: cloud
          zone: zone
          price: 1.4658129805029452
          accelerators: ""
          use_spot: true
          region: region
          image_id: ""
          instance_type: instance_type
        workload:
          workload_type: batch
          workload_prompt: workload_prompt
          cost_perf_weight: -0.8398343619077977
        constraints:
          regions:
          - regions
          - regions
          memory: 6
          cpus: 1
          compute_capability: compute_capability
          areas:
          - areas
          - areas
          clouds:
          - clouds
          - clouds
          storage: 5
          accelerator_count: 7
          platform: platform
          persistent_disk: 5
          accelerators:
          - accelerators
          - accelerators
          docker_image: docker_image
          vram: 2
      properties:
        workload:
          $ref: '#/components/schemas/Workload'
        current_resources:
          $ref: '#/components/schemas/ClusterOffer'
        constraints:
          $ref: '#/components/schemas/Resources'
      required:
      - constraints
      - current_resources
      - workload
      type: object
    AnalyzeGetResponse:
      description: Serializer for cluster analyzer response.
      example:
        results:
        - offer:
            accelerator_args: ""
            memory: 441289069
            regions: ""
            cpus: 413233370
            disk_size: -1803530559
            storage: storage
            ports: ""
            accelerator_count: ""
            disk_tier: disk_tier
            job_recovery: job_recovery
            labels: ""
            cloud: cloud
            zone: zone
            price: 1.4658129805029452
            accelerators: ""
            use_spot: true
            region: region
            image_id: ""
            instance_type: instance_type
          score:
            weighted_score: 0.7061401241503109
            rel_perf: 0.5637376656633328
            rel_price: 0.23021358869347652
        - offer:
            accelerator_args: ""
            memory: 441289069
            regions: ""
            cpus: 413233370
            disk_size: -1803530559
            storage: storage
            ports: ""
            accelerator_count: ""
            disk_tier: disk_tier
            job_recovery: job_recovery
            labels: ""
            cloud: cloud
            zone: zone
            price: 1.4658129805029452
            accelerators: ""
            use_spot: true
            region: region
            image_id: ""
            instance_type: instance_type
          score:
            weighted_score: 0.7061401241503109
            rel_perf: 0.5637376656633328
            rel_price: 0.23021358869347652
      properties:
        results:
          items:
            $ref: '#/components/schemas/AnalyzerResult'
          type: array
      required:
      - results
      type: object
    AnalyzerResult:
      example:
        offer:
          accelerator_args: ""
          memory: 441289069
          regions: ""
          cpus: 413233370
          disk_size: -1803530559
          storage: storage
          ports: ""
          accelerator_count: ""
          disk_tier: disk_tier
          job_recovery: job_recovery
          labels: ""
          cloud: cloud
          zone: zone
          price: 1.4658129805029452
          accelerators: ""
          use_spot: true
          region: region
          image_id: ""
          instance_type: instance_type
        score:
          weighted_score: 0.7061401241503109
          rel_perf: 0.5637376656633328
          rel_price: 0.23021358869347652
      properties:
        offer:
          $ref: '#/components/schemas/ClusterOffer'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - offer
      - score
      type: object
    AutoStop:
      properties:
        id:
          readOnly: true
          type: integer
        enabled:
          type: boolean
        timeout_minutes:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - id
      type: object
    Bucket:
      description: Bucket configuration serializer.
      properties:
        name:
          nullable: true
          type: string
        mode:
          nullable: true
          type: string
        mount_location:
          nullable: true
          type: string
      required:
      - mode
      - mount_location
      - name
      type: object
    Cluster:
      description: Cluster serializer.
      example:
        to_down: true
        metadata: metadata
        launched_at: -1803530559
        last_use: last_use
        name: name
        handle: ""
        user:
          email: email
        cluster_hash: cluster_hash
        autostop: 441289069
        status: INIT
      properties:
        user:
          $ref: '#/components/schemas/User'
        name:
          maxLength: 255
          type: string
        launched_at:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        last_use:
          maxLength: 255
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ClusterStatusEnum'
        autostop:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        metadata:
          type: string
        to_down:
          type: boolean
        cluster_hash:
          maxLength: 255
          nullable: true
          type: string
        handle:
          allOf:
          - $ref: '#/components/schemas/PickledHandleField'
          nullable: true
      required:
      - handle
      - name
      - user
      type: object
    ClusterActionResponse:
      description: Cluster action response serializer.
      example:
        cluster_name: cluster_name
        message: message
        status: status
      properties:
        cluster_name:
          type: string
        status:
          type: string
        message:
          type: string
      required:
      - cluster_name
      - message
      - status
      type: object
    ClusterListResponse:
      description: Cluster list response serializer.
      example:
        clusters:
        - to_down: true
          metadata: metadata
          launched_at: -1803530559
          last_use: last_use
          name: name
          handle: ""
          user:
            email: email
          cluster_hash: cluster_hash
          autostop: 441289069
          status: INIT
        - to_down: true
          metadata: metadata
          launched_at: -1803530559
          last_use: last_use
          name: name
          handle: ""
          user:
            email: email
          cluster_hash: cluster_hash
          autostop: 441289069
          status: INIT
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
      required:
      - clusters
      type: object
    ClusterOffer:
      example:
        accelerator_args: ""
        memory: 441289069
        regions: ""
        cpus: 413233370
        disk_size: -1803530559
        storage: storage
        ports: ""
        accelerator_count: ""
        disk_tier: disk_tier
        job_recovery: job_recovery
        labels: ""
        cloud: cloud
        zone: zone
        price: 1.4658129805029452
        accelerators: ""
        use_spot: true
        region: region
        image_id: ""
        instance_type: instance_type
      properties:
        disk_size:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        cloud:
          maxLength: 100
          nullable: true
          type: string
        job_recovery:
          maxLength: 100
          nullable: true
          type: string
        disk_tier:
          maxLength: 100
          nullable: true
          type: string
        memory:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        accelerator_args:
          nullable: true
        region:
          maxLength: 100
          nullable: true
          type: string
        price:
          format: double
          nullable: true
          type: number
        storage:
          maxLength: 100
          nullable: true
          type: string
        instance_type:
          maxLength: 100
          nullable: true
          type: string
        cpus:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        accelerators:
          nullable: true
        use_spot:
          nullable: true
          type: boolean
        zone:
          maxLength: 100
          nullable: true
          type: string
        image_id:
          nullable: true
        ports:
          nullable: true
        labels:
          nullable: true
        accelerator_count:
          nullable: true
        regions:
          nullable: true
      type: object
    ClusterPostRequest:
      description: Clister post request serializer.
      example:
        project:
          updated_at: 2000-01-23T04:56:07.000+00:00
          project_id: project_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
        choice:
          accelerator_args: ""
          memory: 441289069
          regions: ""
          cpus: 413233370
          disk_size: -1803530559
          storage: storage
          ports: ""
          accelerator_count: ""
          disk_tier: disk_tier
          job_recovery: job_recovery
          labels: ""
          cloud: cloud
          zone: zone
          price: 1.4658129805029452
          accelerators: ""
          use_spot: true
          region: region
          image_id: ""
          instance_type: instance_type
        config:
          job_config: ""
          io: ""
          flags:
            key: ""
          project: ""
          setup: ""
          resources:
            regions:
            - regions
            - regions
            memory: 6
            cpus: 1
            compute_capability: compute_capability
            areas:
            - areas
            - areas
            clouds:
            - clouds
            - clouds
            storage: 5
            accelerator_count: 7
            platform: platform
            persistent_disk: 5
            accelerators:
            - accelerators
            - accelerators
            docker_image: docker_image
            vram: 2
          run: ""
          teardown: ""
      properties:
        choice:
          $ref: '#/components/schemas/ClusterOffer'
        config:
          $ref: '#/components/schemas/ConstrainRequest'
        project:
          $ref: '#/components/schemas/Project'
      required:
      - choice
      - config
      - project
      type: object
    ClusterPostResponse:
      example:
        provision_log_id: provision_log_id
      properties:
        provision_log_id:
          type: string
      required:
      - provision_log_id
      type: object
    ClusterStatusEnum:
      description: |-
        * `INIT` - INIT
        * `UP` - UP
        * `STOPPED` - STOPPED
        * `ERROR` - ERROR
      enum:
      - INIT
      - UP
      - STOPPED
      - ERROR
      type: string
    ClusterStatusResponse:
      description: Cluster status response serializer.
      example:
        cluster_name: cluster_name
        status: status
      properties:
        cluster_name:
          type: string
        status:
          type: string
      required:
      - cluster_name
      - status
      type: object
    ConstrainRequest:
      description: |-
        Configuration serializer for cluster constraints.

        Validates the full configuration schema including project details,
        scripts, resource requirements, and IO specifications.
      example:
        job_config: ""
        io: ""
        flags:
          key: ""
        project: ""
        setup: ""
        resources:
          regions:
          - regions
          - regions
          memory: 6
          cpus: 1
          compute_capability: compute_capability
          areas:
          - areas
          - areas
          clouds:
          - clouds
          - clouds
          storage: 5
          accelerator_count: 7
          platform: platform
          persistent_disk: 5
          accelerators:
          - accelerators
          - accelerators
          docker_image: docker_image
          vram: 2
        run: ""
        teardown: ""
      properties:
        project:
          allOf:
          - $ref: '#/components/schemas/Project'
          readOnly: true
        setup:
          allOf:
          - $ref: '#/components/schemas/Script'
          nullable: true
        run:
          allOf:
          - $ref: '#/components/schemas/Script'
          nullable: true
        teardown:
          allOf:
          - $ref: '#/components/schemas/Script'
          nullable: true
        resources:
          $ref: '#/components/schemas/Resources'
        job_config:
          allOf:
          - $ref: '#/components/schemas/JobConfig'
          nullable: true
        io:
          allOf:
          - $ref: '#/components/schemas/IO'
          nullable: true
        flags:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - io
      - job_config
      - project
      - resources
      type: object
    ConstrainResponse:
      description: |-
        Serializer for cluster constraint response.

        Fields:
            choice (list): List of cluster offers matching the constraints
      example:
        choice:
        - accelerator_args: ""
          memory: 441289069
          regions: ""
          cpus: 413233370
          disk_size: -1803530559
          storage: storage
          ports: ""
          accelerator_count: ""
          disk_tier: disk_tier
          job_recovery: job_recovery
          labels: ""
          cloud: cloud
          zone: zone
          price: 1.4658129805029452
          accelerators: ""
          use_spot: true
          region: region
          image_id: ""
          instance_type: instance_type
        - accelerator_args: ""
          memory: 441289069
          regions: ""
          cpus: 413233370
          disk_size: -1803530559
          storage: storage
          ports: ""
          accelerator_count: ""
          disk_tier: disk_tier
          job_recovery: job_recovery
          labels: ""
          cloud: cloud
          zone: zone
          price: 1.4658129805029452
          accelerators: ""
          use_spot: true
          region: region
          image_id: ""
          instance_type: instance_type
      properties:
        choice:
          items:
            $ref: '#/components/schemas/ClusterOffer'
          type: array
      required:
      - choice
      type: object
    DownloadResponse:
      description: Download response serializer.
      example:
        binary: binary
        url: url
      properties:
        url:
          type: string
        binary:
          type: string
      required:
      - binary
      - url
      type: object
    IO:
      description: IO configuration serializer.
      properties:
        inputs:
          allOf:
          - $ref: '#/components/schemas/Inputs'
          nullable: true
        outputs:
          allOf:
          - $ref: '#/components/schemas/Outputs'
          nullable: true
      type: object
    Inputs:
      description: Inputs configuration serializer.
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/Bucket'
          nullable: true
          type: array
      type: object
    Job:
      description: Job serializer.
      example:
        cluster: ""
        updated_at: 2000-01-23T04:56:07.000+00:00
        finished_at: 2000-01-23T04:56:07.000+00:00
        configuration: configuration
        job_id: job_id
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        started_at: 2000-01-23T04:56:07.000+00:00
        logs: logs
      properties:
        name:
          maxLength: 255
          type: string
        job_id:
          maxLength: 255
          type: string
        configuration:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        started_at:
          format: date-time
          nullable: true
          type: string
        finished_at:
          format: date-time
          nullable: true
          type: string
        logs:
          type: string
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          nullable: true
      required:
      - cluster
      - configuration
      - created_at
      - job_id
      - logs
      - name
      - updated_at
      type: object
    JobConfig:
      description: Config for the job. Not to be confused with the job itself.
      properties:
        id:
          readOnly: true
          type: integer
        autostop:
          $ref: '#/components/schemas/AutoStop'
        notifications:
          $ref: '#/components/schemas/NotificationConfig'
      required:
      - autostop
      - id
      - notifications
      type: object
    JobGetResponse:
      description: Job get response serializer.
      example:
        job:
          cluster: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          finished_at: 2000-01-23T04:56:07.000+00:00
          configuration: configuration
          job_id: job_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          started_at: 2000-01-23T04:56:07.000+00:00
          logs: logs
        latest_cluster_log: ""
      properties:
        job:
          $ref: '#/components/schemas/Job'
        latest_cluster_log:
          allOf:
          - $ref: '#/components/schemas/LatestClusterLog'
          nullable: true
      required:
      - job
      - latest_cluster_log
      type: object
    JobListResponse:
      description: Job list response serializer.
      example:
        jobs:
        - cluster: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          finished_at: 2000-01-23T04:56:07.000+00:00
          configuration: configuration
          job_id: job_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          started_at: 2000-01-23T04:56:07.000+00:00
          logs: logs
        - cluster: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          finished_at: 2000-01-23T04:56:07.000+00:00
          configuration: configuration
          job_id: job_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          started_at: 2000-01-23T04:56:07.000+00:00
          logs: logs
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/Job'
          type: array
      required:
      - jobs
      type: object
    JobUpdateResponse:
      description: Job update response serializer.
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
    LatestClusterLog:
      description: Latest cluster log serializer.
      properties:
        timestamp:
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/LatestClusterLogStatusEnum'
        message:
          type: string
      required:
      - message
      - status
      - timestamp
      type: object
    LatestClusterLogStatusEnum:
      description: |-
        * `UPDATING` - UPDATING
        * `DONE` - DONE
        * `CLUSTER_ERROR` - CLUSTER_ERROR
      enum:
      - UPDATING
      - DONE
      - CLUSTER_ERROR
      type: string
    NotificationConfig:
      properties:
        id:
          readOnly: true
          type: integer
        email_on_success:
          type: boolean
        email_on_failure:
          type: boolean
        email_recipient:
          format: email
          maxLength: 254
          type: string
      required:
      - id
      type: object
    Outputs:
      description: Outputs configuration serializer.
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/Bucket'
          nullable: true
          type: array
      type: object
    PatchedConstrainPatchRequest:
      description: Serializer for cluster constraint patch request.
      example:
        job_id: job_id
        config:
          job_config: ""
          io: ""
          flags:
            key: ""
          project: ""
          setup: ""
          resources:
            regions:
            - regions
            - regions
            memory: 6
            cpus: 1
            compute_capability: compute_capability
            areas:
            - areas
            - areas
            clouds:
            - clouds
            - clouds
            storage: 5
            accelerator_count: 7
            platform: platform
            persistent_disk: 5
            accelerators:
            - accelerators
            - accelerators
            docker_image: docker_image
            vram: 2
          run: ""
          teardown: ""
      properties:
        job_id:
          type: string
        config:
          $ref: '#/components/schemas/ConstrainRequest'
      type: object
    PatchedJobUpdateRequest:
      description: Job update request serializer.
      example:
        finished_at: 2000-01-23T04:56:07.000+00:00
        exit_code: 0
        logs: logs
      properties:
        logs:
          type: string
        exit_code:
          type: integer
        finished_at:
          format: date-time
          type: string
      type: object
    PickledHandleField:
      description: Custom field serializer for pickled handle data.
      properties:
        docker_user:
          nullable: true
          type: string
        stable_internal_ip:
          nullable: true
          type: string
        stable_external_ip:
          nullable: true
          type: string
        stable_ssh_ports:
          items:
            type: integer
          type: array
        ssh_user:
          nullable: true
          type: string
      type: object
    Project:
      description: Project serializer.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        project_id: project_id
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        type: type
      properties:
        name:
          type: string
        project_id:
          type: string
        type:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      required:
      - created_at
      - name
      - project_id
      - type
      - updated_at
      type: object
    ProjectCreateRequest:
      description: Project create request serializer.
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    ProjectsGetResponse:
      description: Projects serializer.
      example:
        projects:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          project_id: project_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
        - updated_at: 2000-01-23T04:56:07.000+00:00
          project_id: project_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
      properties:
        projects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
      required:
      - projects
      type: object
    ProvisionLog:
      example:
        cluster:
          to_down: true
          metadata: metadata
          launched_at: -1803530559
          last_use: last_use
          name: name
          handle: ""
          user:
            email: email
          cluster_hash: cluster_hash
          autostop: 441289069
          status: INIT
        provision_id: provision_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        step_name: step_name
        started_at: 2000-01-23T04:56:07.000+00:00
        message: message
        status: PENDING
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
        provision_id:
          maxLength: 255
          type: string
        step_name:
          maxLength: 255
          type: string
        status:
          $ref: '#/components/schemas/ProvisionLogStatusEnum'
        message:
          nullable: true
          type: string
        started_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      required:
      - cluster
      - provision_id
      - started_at
      - step_name
      - updated_at
      type: object
    ProvisionLogStatusEnum:
      description: |-
        * `PENDING` - PROVISION_PENDING
        * `IN_PROGRESS` - PROVISION_IN_PROGRESS
        * `TRANSFER_SSH` - PROVISION_TRANSFER_SSH
        * `SETUP_BUCKETS` - PROVISION_SETUP_BUCKETS
        * `SYNC_FILE_MOUNTS` - PROVISION_SYNC_FILE_MOUNTS
        * `COMPLETED` - PROVISION_COMPLETED
        * `FAILED` - PROVISION_FAILED
      enum:
      - PENDING
      - IN_PROGRESS
      - TRANSFER_SSH
      - SETUP_BUCKETS
      - SYNC_FILE_MOUNTS
      - COMPLETED
      - FAILED
      type: string
    Resources:
      description: Resource configuration serializer.
      example:
        regions:
        - regions
        - regions
        memory: 6
        cpus: 1
        compute_capability: compute_capability
        areas:
        - areas
        - areas
        clouds:
        - clouds
        - clouds
        storage: 5
        accelerator_count: 7
        platform: platform
        persistent_disk: 5
        accelerators:
        - accelerators
        - accelerators
        docker_image: docker_image
        vram: 2
      properties:
        clouds:
          items:
            nullable: true
            type: string
          type: array
        docker_image:
          nullable: true
          type: string
        regions:
          items:
            nullable: true
            type: string
          type: array
        areas:
          items:
            nullable: true
            type: string
          type: array
        memory:
          nullable: true
          type: integer
        cpus:
          nullable: true
          type: integer
        storage:
          nullable: true
          type: integer
        persistent_disk:
          nullable: true
          type: integer
        accelerators:
          items:
            nullable: true
            type: string
          nullable: true
          type: array
        compute_capability:
          nullable: true
          type: string
        vram:
          nullable: true
          type: integer
        accelerator_count:
          nullable: true
          type: integer
        platform:
          nullable: true
          type: string
      required:
      - accelerators
      type: object
    Score:
      example:
        weighted_score: 0.7061401241503109
        rel_perf: 0.5637376656633328
        rel_price: 0.23021358869347652
      properties:
        rel_perf:
          description: "Relative performance of the offer compared to the current\
            \ configuration. A float value describing estimated proportional performance\
            \ of the resource with the given workload. A value of 1 is equal performance,\
            \ 2 is double performance and 0.5 is half performance."
          format: double
          minimum: 0
          type: number
        rel_price:
          description: "Relative price of the offer compared to the current configuration.\
            \ A float value describing estimated proportional price of the resource\
            \ with the given workload. A value of 1 is equal price, 2 is double price\
            \ and 0.5 is half price."
          format: double
          minimum: 0
          type: number
        weighted_score:
          description: "Weighted score of the configuration taking into consideration\
            \ the workload type, cost to performance weighting and more. Higher is\
            \ better."
          format: double
          minimum: 0
          type: number
      required:
      - rel_perf
      - rel_price
      - weighted_score
      type: object
    Script:
      description: Script configuration serializer.
      properties:
        script:
          items:
            type: string
          type: array
      required:
      - script
      type: object
    TempJobPostRequest:
      description: Job detail post request serialier
      example:
        cluster:
          to_down: true
          metadata: metadata
          launched_at: -1803530559
          last_use: last_use
          name: name
          handle: ""
          user:
            email: email
          cluster_hash: cluster_hash
          autostop: 441289069
          status: INIT
        project:
          updated_at: 2000-01-23T04:56:07.000+00:00
          project_id: project_id
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
        config:
          job_config: ""
          io: ""
          flags:
            key: ""
          project: ""
          setup: ""
          resources:
            regions:
            - regions
            - regions
            memory: 6
            cpus: 1
            compute_capability: compute_capability
            areas:
            - areas
            - areas
            clouds:
            - clouds
            - clouds
            storage: 5
            accelerator_count: 7
            platform: platform
            persistent_disk: 5
            accelerators:
            - accelerators
            - accelerators
            docker_image: docker_image
            vram: 2
          run: ""
          teardown: ""
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
        config:
          $ref: '#/components/schemas/ConstrainRequest'
        project:
          $ref: '#/components/schemas/Project'
      required:
      - cluster
      - config
      - project
      type: object
    User:
      description: User serializer.
      example:
        email: email
      properties:
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
      required:
      - email
      type: object
    UserPublicKeyRequest:
      example:
        public_key: public_key
      properties:
        public_key:
          type: string
      required:
      - public_key
      type: object
    UserPublicKeyResponse:
      example:
        public_key: public_key
      properties:
        public_key:
          type: string
      required:
      - public_key
      type: object
    UserResponse:
      example:
        email: email
      properties:
        email:
          format: email
          readOnly: true
          type: string
      required:
      - email
      type: object
    Workload:
      example:
        workload_type: batch
        workload_prompt: workload_prompt
        cost_perf_weight: -0.8398343619077977
      properties:
        workload_type:
          $ref: '#/components/schemas/WorkloadTypeEnum'
        workload_prompt:
          description: "A prompt describing the workload type you're running. Can\
            \ be a LLM model name with precision, web hosting and more."
          type: string
        cost_perf_weight:
          description: "Weight factor balancing cost vs performance. -1 prioritizes\
            \ cost, 1 prioritizes performance. For a balanced result, select 0."
          format: double
          maximum: 1
          minimum: -1
          type: number
      required:
      - cost_perf_weight
      - workload_prompt
      - workload_type
      type: object
    WorkloadTypeEnum:
      description: |-
        * `batch` - batch
        * `serving` - serving
      enum:
      - batch
      - serving
      type: string
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /accounts/o/authorize/
          scopes:
            read: Read access
            write: Write access
          tokenUrl: /accounts/o/token/
        clientCredentials:
          scopes:
            read: Read access
            write: Write access
          tokenUrl: /accounts/o/token/
        password:
          scopes:
            read: Read access
            write: Write access
          tokenUrl: /accounts/o/token/
      type: oauth2
    tokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
