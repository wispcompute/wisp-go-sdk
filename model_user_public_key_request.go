/*
Wisp API

Wisp API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wisp

import (
	"encoding/json"
)

// UserPublicKeyRequest struct for UserPublicKeyRequest
type UserPublicKeyRequest struct {
	PublicKey string `json:"public_key"`
}

// NewUserPublicKeyRequest instantiates a new UserPublicKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPublicKeyRequest(publicKey string) *UserPublicKeyRequest {
	this := UserPublicKeyRequest{}
	this.PublicKey = publicKey
	return &this
}

// NewUserPublicKeyRequestWithDefaults instantiates a new UserPublicKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPublicKeyRequestWithDefaults() *UserPublicKeyRequest {
	this := UserPublicKeyRequest{}
	return &this
}

// GetPublicKey returns the PublicKey field value
func (o *UserPublicKeyRequest) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *UserPublicKeyRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *UserPublicKeyRequest) SetPublicKey(v string) {
	o.PublicKey = v
}

func (o UserPublicKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["public_key"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableUserPublicKeyRequest struct {
	value *UserPublicKeyRequest
	isSet bool
}

func (v NullableUserPublicKeyRequest) Get() *UserPublicKeyRequest {
	return v.value
}

func (v *NullableUserPublicKeyRequest) Set(val *UserPublicKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPublicKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPublicKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPublicKeyRequest(val *UserPublicKeyRequest) *NullableUserPublicKeyRequest {
	return &NullableUserPublicKeyRequest{value: val, isSet: true}
}

func (v NullableUserPublicKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPublicKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


