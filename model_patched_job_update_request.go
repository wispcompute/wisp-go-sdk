/*
Wisp API

Wisp API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wisp

import (
	"encoding/json"
	"time"
)

// checks if the PatchedJobUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedJobUpdateRequest{}

// PatchedJobUpdateRequest Job update request serializer.
type PatchedJobUpdateRequest struct {
	Logs *string `json:"logs,omitempty"`
	ExitCode *int32 `json:"exit_code,omitempty"`
	FinishedAt *time.Time `json:"finished_at,omitempty"`
}

// NewPatchedJobUpdateRequest instantiates a new PatchedJobUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedJobUpdateRequest() *PatchedJobUpdateRequest {
	this := PatchedJobUpdateRequest{}
	return &this
}

// NewPatchedJobUpdateRequestWithDefaults instantiates a new PatchedJobUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedJobUpdateRequestWithDefaults() *PatchedJobUpdateRequest {
	this := PatchedJobUpdateRequest{}
	return &this
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *PatchedJobUpdateRequest) GetLogs() string {
	if o == nil || IsNil(o.Logs) {
		var ret string
		return ret
	}
	return *o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobUpdateRequest) GetLogsOk() (*string, bool) {
	if o == nil || IsNil(o.Logs) {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *PatchedJobUpdateRequest) HasLogs() bool {
	if o != nil && !IsNil(o.Logs) {
		return true
	}

	return false
}

// SetLogs gets a reference to the given string and assigns it to the Logs field.
func (o *PatchedJobUpdateRequest) SetLogs(v string) {
	o.Logs = &v
}

// GetExitCode returns the ExitCode field value if set, zero value otherwise.
func (o *PatchedJobUpdateRequest) GetExitCode() int32 {
	if o == nil || IsNil(o.ExitCode) {
		var ret int32
		return ret
	}
	return *o.ExitCode
}

// GetExitCodeOk returns a tuple with the ExitCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobUpdateRequest) GetExitCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ExitCode) {
		return nil, false
	}
	return o.ExitCode, true
}

// HasExitCode returns a boolean if a field has been set.
func (o *PatchedJobUpdateRequest) HasExitCode() bool {
	if o != nil && !IsNil(o.ExitCode) {
		return true
	}

	return false
}

// SetExitCode gets a reference to the given int32 and assigns it to the ExitCode field.
func (o *PatchedJobUpdateRequest) SetExitCode(v int32) {
	o.ExitCode = &v
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise.
func (o *PatchedJobUpdateRequest) GetFinishedAt() time.Time {
	if o == nil || IsNil(o.FinishedAt) {
		var ret time.Time
		return ret
	}
	return *o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobUpdateRequest) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FinishedAt) {
		return nil, false
	}
	return o.FinishedAt, true
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *PatchedJobUpdateRequest) HasFinishedAt() bool {
	if o != nil && !IsNil(o.FinishedAt) {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given time.Time and assigns it to the FinishedAt field.
func (o *PatchedJobUpdateRequest) SetFinishedAt(v time.Time) {
	o.FinishedAt = &v
}

func (o PatchedJobUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedJobUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Logs) {
		toSerialize["logs"] = o.Logs
	}
	if !IsNil(o.ExitCode) {
		toSerialize["exit_code"] = o.ExitCode
	}
	if !IsNil(o.FinishedAt) {
		toSerialize["finished_at"] = o.FinishedAt
	}
	return toSerialize, nil
}

type NullablePatchedJobUpdateRequest struct {
	value *PatchedJobUpdateRequest
	isSet bool
}

func (v NullablePatchedJobUpdateRequest) Get() *PatchedJobUpdateRequest {
	return v.value
}

func (v *NullablePatchedJobUpdateRequest) Set(val *PatchedJobUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedJobUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedJobUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedJobUpdateRequest(val *PatchedJobUpdateRequest) *NullablePatchedJobUpdateRequest {
	return &NullablePatchedJobUpdateRequest{value: val, isSet: true}
}

func (v NullablePatchedJobUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedJobUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


